
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Single-Trait Single-Environment model ----
> # This script fits single-trait single-environment models
> 
> # Clean workspace
> rm(list = objects())  # Removes all objects from the environment.
> 
> # Packages ----
> library(tidyverse) # R packages for data science.
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(asreml) # ASReml-R package.
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Online License checked out Thu Jan 30 15:12:03 2025
Loading ASReml-R version 4.2

> 
> # Load data ----
> ## Pheno & Ginv
> load('ILYT_Pheno-Gmatrix.RData')
> 
> # Fit model ----
> ## Run the model ----
> 
> STSE.asr <- asreml(
+   Pheno_z ~ TraitEnv,
+   random = ~ diag(TraitEnv):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | TraitEnv),
+   sparse = ~ TraitEnv:Gdrop,
+   data = ILYT_Pheno,
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '12gb',
+   trace = TRUE
+ )
> print('STSE')
[1] "STSE"
> print(summary(STSE.asr)$call)
asreml(fixed = Pheno_z ~ TraitEnv, random = ~diag(TraitEnv):vm(Gkeep, 
    Ginv.sparse), sparse = ~TraitEnv:Gdrop, residual = ~dsum(~ar1(Col):ar1(Row) | 
    TraitEnv), na.action = na.method(x = "include"), data = ILYT_Pheno, 
    maxit = 20, workspace = "12gb", trace = TRUE)
> STSE.asr$loglik
[1] 13260.07
> print('AIC')
[1] "AIC"
> print(summary(STSE.asr)$aic)
[1] -26208.14
attr(,"parameters")
[1] 156
> print(paste('convergence =',STSE.asr$converge))
[1] "convergence = TRUE"
> 
> # Save data ----
> save.image('STSE_mod.RData')
> 
> # Heritability ----
> STSE_varcomp_df <- summary(STSE.asr)$varcomp |>
+   as.data.frame() |>
+   rownames_to_column() |>
+   glimpse()
Rows: 156
Columns: 6
$ rowname   <chr> "TraitEnv:vm(Gkeep, Ginv.sparse)!TraitEnv_GY-22-Adv", "Trait…
$ component <dbl> 0.06795188, 0.11983912, 0.11203748, 0.15763479, 0.06858262, …
$ std.error <dbl> 0.008699837, 0.010057853, 0.010305379, 0.009511795, 0.008308…
$ z.ratio   <dbl> 7.810707, 11.914980, 10.871748, 16.572559, 8.254739, 8.98980…
$ bound     <chr> "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", …
$ `%ch`     <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, …
> 
> calculate_heritability <- function(varcomp_df, asreml_model) {
+   # Function to perform one-by-one vpredict calculations
+   vpredict_individual <- function(asreml_model, i, j) {
+     formula <- as.formula(paste0("V", i, "~V", i, "/(V", i, "+V", j, ")"))
+     result <- vpredict(asreml_model, formula)
+     return(data.frame(Index = i, Formula = paste0("V", i, "~V", i, "/(V", i, "+V", j, ")"), Result = result))
+   }
+   
+   # Initialize an empty dataframe to store results
+   vpredict_results <- data.frame()
+   
+   # Loop through each pair of indices (V1 to V39 and V40 to V154 incrementing by 3)
+   for (i in 1:39) {
+     j <- 37 + i * 3
+     if (j <= 154) {
+       result <- vpredict_individual(asreml_model, i, j)
+       vpredict_results <- rbind(vpredict_results, result)
+     }
+   }
+   
+   return(vpredict_results)
+ }
> 
> STSE_h2 <- cbind(
+   unique(ILYT_Pheno$TraitEnv),
+   calculate_heritability(varcomp_df = STSE_varcomp_df, asreml_model = STSE.asr)
+ )
> print(STSE_h2)
    unique(ILYT_Pheno$TraitEnv) Index            Formula Result.Estimate
V1                    GY-22-Adv     1     V1~V1/(V1+V40)      0.23668745
V2                    GY-22-Neo     2     V2~V2/(V2+V43)      0.38328590
V3                    GY-22-Stp     3     V3~V3/(V3+V46)      0.42987523
V4                    GY-22-Urb     4     V4~V4/(V4+V49)      0.51827930
V5                    GY-23-Adv     5     V5~V5/(V5+V52)      0.28902432
V6                    GY-23-Neo     6     V6~V6/(V6+V55)      0.46344702
V7                    GY-23-Stp     7     V7~V7/(V7+V58)      0.07227687
V8                    GY-23-Urb     8     V8~V8/(V8+V61)      0.35284372
V9                    GY-24-Adv     9     V9~V9/(V9+V64)      0.49035691
V10                   GY-24-Neo    10  V10~V10/(V10+V67)      0.61120214
V11                   GY-24-Stp    11  V11~V11/(V11+V70)      0.56010213
V12                   GY-24-Urb    12  V12~V12/(V12+V73)      0.61692223
V13                   HD-22-Neo    13  V13~V13/(V13+V76)      0.61608623
V14                   HD-22-Urb    14  V14~V14/(V14+V79)      0.59183890
V15                   HD-23-Neo    15  V15~V15/(V15+V82)      0.68844901
V16                   HD-23-Urb    16  V16~V16/(V16+V85)      0.60310924
V17                   HD-24-Neo    17  V17~V17/(V17+V88)      0.60290259
V18                   HD-24-Urb    18  V18~V18/(V18+V91)      0.85095108
V19                   HT-22-Neo    19  V19~V19/(V19+V94)      0.42828874
V20                   HT-22-Urb    20  V20~V20/(V20+V97)      0.28711560
V21                   HT-23-Neo    21 V21~V21/(V21+V100)      0.33358888
V22                   HT-23-Stp    22 V22~V22/(V22+V103)      0.23643889
V23                   HT-23-Urb    23 V23~V23/(V23+V106)      0.50904045
V24                   HT-24-Neo    24 V24~V24/(V24+V109)      0.58829295
V25                   HT-24-Urb    25 V25~V25/(V25+V112)      0.66805446
V26                  MAT-23-Urb    26 V26~V26/(V26+V115)      0.55013402
V27                  MAT-24-Urb    27 V27~V27/(V27+V118)      0.51482190
V28                   TW-22-Adv    28 V28~V28/(V28+V121)      0.72884248
V29                   TW-22-Neo    29 V29~V29/(V29+V124)      0.81329634
V30                   TW-22-Stp    30 V30~V30/(V30+V127)      0.86568700
V31                   TW-22-Urb    31 V31~V31/(V31+V130)      0.67654799
V32                   TW-23-Adv    32 V32~V32/(V32+V133)      0.73557816
V33                   TW-23-Neo    33 V33~V33/(V33+V136)      0.72204278
V34                   TW-23-Stp    34 V34~V34/(V34+V139)      0.74599057
V35                   TW-23-Urb    35 V35~V35/(V35+V142)      0.37779554
V36                   TW-24-Adv    36 V36~V36/(V36+V145)      0.92484419
V37                   TW-24-Neo    37 V37~V37/(V37+V148)      0.81077334
V38                   TW-24-Stp    38 V38~V38/(V38+V151)      0.62083456
V39                   TW-24-Urb    39 V39~V39/(V39+V154)      0.69990426
     Result.SE
V1  0.03120932
V2  0.03527495
V3  0.04265158
V4  0.02818458
V5  0.03550119
V6  0.04134517
V7  0.02270804
V8  0.02940145
V9  0.04847124
V10 0.03253825
V11 0.04588486
V12 0.03068610
V13 0.03155129
V14 0.03400889
V15 0.03707239
V16 0.03469969
V17 0.04261115
V18 0.01962660
V19 0.03423667
V20 0.03130628
V21 0.04179079
V22 0.04394180
V23 0.03036474
V24 0.04294280
V25 0.03519712
V26 0.03442666
V27 0.04193519
V28 0.03138763
V29 0.01941466
V30 0.01679196
V31 0.02849670
V32 0.02872854
V33 0.02676387
V34 0.02770181
V35 0.04038692
V36 0.01143658
V37 0.02262705
V38 0.04539238
V39 0.03157315
> 
> # Save data ----
> save.image('STSE_mod.RData')
> 
> proc.time()
    user   system  elapsed 
5972.451  364.828 1874.615 
