
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Online License checked out Thu Feb 13 13:08:20 2025
[Previously saved workspace restored]

> # Single-Trait Multi-Environment models ----
> # This script fits Single-Trait Multi-Environment models
> 
> # Clean workspace
> rm(list = objects())  # Removes all objects from the environment.
> 
> # Packages ----
> library(tidyverse) # R packages for data science.
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(asreml) # ASReml-R package.
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading ASReml-R version 4.2

> 
> # Use for HPC only
> setwd('~/MTME_ILWheat/')
> 
> # Load data ----
> ## Pheno & Ginv
> load('Data/ILYT_Pheno-Gmatrix.RData')
> 
> # Fit models ----
> 
> ## GY ----
> ### rr1----
> # Run model
> GY_STME.z_rr1.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,1):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'GY') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
> # Print model info
> print('GY_STME.z_rr1')
[1] "GY_STME.z_rr1"
> print('AIC')
[1] "AIC"
> print(summary(GY_STME.z_rr1.asr)$aic)
[1] -6485.116
attr(,"parameters")
[1] 60
> print(paste('convergence =',GY_STME.z_rr1.asr$converge))
[1] "convergence = TRUE"
> GY_STME.z_rr1.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3        4        5        6        7
1    LogLik 1391.682 2161.598 2816.066 3126.486 3257.039 3289.754 3298.657
        8       9       10       11       12      13       14       15       16
1 3301.31 3302.14 3302.412 3302.504 3302.538 3302.55 3302.555 3302.557 3302.558
        17
1 3302.558
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr2----
> # Run model
> GY_STME.z_rr2.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,2):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'GY') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
Warning message:
In asreml(Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep, Ginv.sparse) +  :
  Some components changed by more than 1% on the last iteration
> # Print model info
> print('GY_STME.z_rr2')
[1] "GY_STME.z_rr2"
> print('AIC')
[1] "AIC"
> print(summary(GY_STME.z_rr2.asr)$aic)
[1] -6670.784
attr(,"parameters")
[1] 71
> print(paste('convergence =',GY_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> GY_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2       3        4        5        6        7
1    LogLik 1364.176 2303.015 2973.02 3256.628 3367.619 3394.328 3402.016
        8        9       10       11       12       13       14       15
1 3404.68 3405.703 3406.109 3406.275 3406.343 3406.372 3406.384 3406.389
        16       17       18
1 3406.391 3406.392 3406.392
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> GY_STME.z_rr2.asr <- update(GY_STME.z_rr2.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('GY_STME.z_rr2-update1')
[1] "GY_STME.z_rr2-update1"
> print('AIC')
[1] "AIC"
> print(summary(GY_STME.z_rr2.asr)$aic)
[1] -6670.785
attr(,"parameters")
[1] 71
> print(paste('convergence =',GY_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> GY_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 3406.393 3406.393 3406.393
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> GY_STME.z_rr2.asr <- update(GY_STME.z_rr2.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('GY_STME.z_rr2-update2')
[1] "GY_STME.z_rr2-update2"
> print('AIC')
[1] "AIC"
> print(summary(GY_STME.z_rr2.asr)$aic)
[1] -6670.786
attr(,"parameters")
[1] 71
> print(paste('convergence =',GY_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> GY_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 3406.393 3406.393 3406.393
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr3----
> # Run model
> GY_STME.z_rr3.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,3):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'GY') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '20gb'
+ )
Warning messages:
1: In asreml(Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep, Ginv.sparse) +  :
  Log-likelihood not converged
2: In asreml(Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep, Ginv.sparse) +  :
  Some components changed by more than 1% on the last iteration
> # Print model info
> print('GY_STME.z_rr3')
[1] "GY_STME.z_rr3"
> print('AIC')
[1] "AIC"
> print(summary(GY_STME.z_rr3.asr)$aic)
[1] -6691.554
attr(,"parameters")
[1] 81
> print(paste('convergence =',GY_STME.z_rr3.asr$converge))
[1] "convergence = FALSE"
> GY_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3        4        5       6        7
1    LogLik 1261.916 2338.055 3034.132 3291.301 3386.966 3410.11 3417.756
         8        9       10       11       12       13      14       15
1 3422.308 3424.223 3425.278 3425.963 3426.331 3426.516 3426.64 3426.715
       16       17       18       19       20       21
1 3426.75 3426.765 3426.772 3426.775 3426.777 3426.777
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> GY_STME.z_rr3.asr <- update(GY_STME.z_rr3.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('GY_STME.z_rr3-update1')
[1] "GY_STME.z_rr3-update1"
> print('AIC')
[1] "AIC"
> print(summary(GY_STME.z_rr3.asr)$aic)
[1] -6691.556
attr(,"parameters")
[1] 81
> print(paste('convergence =',GY_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> GY_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 3426.778 3426.778 3426.778
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> GY_STME.z_rr3.asr <- update(GY_STME.z_rr3.asr)
> 
> # Print model info
> print('GY_STME.z_rr3-update2')
[1] "GY_STME.z_rr3-update2"
> print('AIC')
[1] "AIC"
> print(summary(GY_STME.z_rr3.asr)$aic)
[1] -6691.557
attr(,"parameters")
[1] 81
> print(paste('convergence =',GY_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> GY_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 3426.778 3426.778 3426.778
> 
> save.image('Data/STME.z_rr.RData')
> 
> ## TW ----
> ### rr1----
> # Run model
> TW_STME.z_rr1.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,1):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'TW') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
> # Print model info
> print('TW_STME.z_rr1')
[1] "TW_STME.z_rr1"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr1.asr)$aic)
[1] -12928.26
attr(,"parameters")
[1] 60
> print(paste('convergence =',TW_STME.z_rr1.asr$converge))
[1] "convergence = TRUE"
> TW_STME.z_rr1.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3        4        5        6        7
1    LogLik 4696.613 5838.536 6231.701 6414.707 6494.475 6515.492 6521.411
         8        9       10       11       12       13       14       15
1 6523.204 6523.793 6524.001 6524.079 6524.109 6524.121 6524.126 6524.128
        16       17
1 6524.129 6524.129
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr2----
> # Run model
> TW_STME.z_rr2.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,2):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'TW') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
Warning messages:
1: In asreml(Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep, Ginv.sparse) +  :
  Log-likelihood not converged
2: In asreml(Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep, Ginv.sparse) +  :
  Some components changed by more than 1% on the last iteration
> # Print model info
> print('TW_STME.z_rr2')
[1] "TW_STME.z_rr2"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr2.asr)$aic)
[1] -13106.64
attr(,"parameters")
[1] 71
> print(paste('convergence =',TW_STME.z_rr2.asr$converge))
[1] "convergence = FALSE"
> TW_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2       3        4        5        6       7
1    LogLik 4461.199 5977.442 6409.38 6545.738 6588.007 6608.569 6615.19
         8       9       10       11       12       13       14       15
1 6618.034 6619.81 6621.079 6621.934 6622.601 6623.153 6623.565 6623.849
        16       17      18       19       20       21
1 6624.032 6624.151 6624.23 6624.284 6624.321 6624.321
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> TW_STME.z_rr2.asr <- update(TW_STME.z_rr2.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('TW_STME.z_rr2-update1')
[1] "TW_STME.z_rr2-update1"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr2.asr)$aic)
[1] -13106.81
attr(,"parameters")
[1] 71
> print(paste('convergence =',TW_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> TW_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2       3        4        5        6        7
1    LogLik 6624.348 6624.354 6624.37 6624.382 6624.391 6624.397 6624.401
         8        9       10
1 6624.405 6624.407 6624.407
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> TW_STME.z_rr2.asr <- update(TW_STME.z_rr2.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('TW_STME.z_rr2-update2')
[1] "TW_STME.z_rr2-update2"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr2.asr)$aic)
[1] -13106.82
attr(,"parameters")
[1] 71
> print(paste('convergence =',TW_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> TW_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 6624.408 6624.409 6624.409
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr3----
> # Run model
> TW_STME.z_rr3.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,3):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'TW') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '20gb'
+ )
Warning messages:
1: In asreml(Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep, Ginv.sparse) +  :
  Log-likelihood not converged
2: In asreml(Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep, Ginv.sparse) +  :
  Some components changed by more than 1% on the last iteration
> # Print model info
> print('TW_STME.z_rr3')
[1] "TW_STME.z_rr3"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr3.asr)$aic)
[1] -13197.67
attr(,"parameters")
[1] 81
> print(paste('convergence =',TW_STME.z_rr3.asr$converge))
[1] "convergence = FALSE"
> TW_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3        4        5        6        7
1    LogLik 4115.087 5975.431 6375.933 6551.655 6632.543 6652.692 6665.951
         8        9       10      11       12      13       14       15
1 6672.481 6675.413 6676.959 6677.91 6678.697 6679.24 6679.547 6679.699
        16       17       18       19       20       21
1 6679.767 6679.799 6679.816 6679.826 6679.833 6679.833
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> TW_STME.z_rr3.asr <- update(TW_STME.z_rr3.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('TW_STME.z_rr3-update1')
[1] "TW_STME.z_rr3-update1"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr3.asr)$aic)
[1] -13197.69
attr(,"parameters")
[1] 81
> print(paste('convergence =',TW_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> TW_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3        4        5        6        7
1    LogLik 6679.837 6679.838 6679.839 6679.841 6679.843 6679.844 6679.845
         8
1 6679.845
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> TW_STME.z_rr3.asr <- update(TW_STME.z_rr3.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('TW_STME.z_rr3-update2')
[1] "TW_STME.z_rr3-update2"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr3.asr)$aic)
[1] -13197.69
attr(,"parameters")
[1] 81
> print(paste('convergence =',TW_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> TW_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 6679.845 6679.845 6679.845
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> TW_STME.z_rr3.asr <- update(TW_STME.z_rr3.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('TW_STME.z_rr3-update3')
[1] "TW_STME.z_rr3-update3"
> print('AIC')
[1] "AIC"
> print(summary(TW_STME.z_rr3.asr)$aic)
[1] -13197.69
attr(,"parameters")
[1] 81
> print(paste('convergence =',TW_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> TW_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 6679.846 6679.846 6679.846
> 
> save.image('Data/STME.z_rr.RData')
> 
> ## HD ----
> ### rr1----
> # Run model
> HD_STME.z_rr1.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,1):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'HD') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
> # Print model info
> print('HD_STME.z_rr1')
[1] "HD_STME.z_rr1"
> print('AIC')
[1] "AIC"
> print(summary(HD_STME.z_rr1.asr)$aic)
[1] -15094.45
attr(,"parameters")
[1] 30
> print(paste('convergence =',HD_STME.z_rr1.asr$converge))
[1] "convergence = TRUE"
> HD_STME.z_rr1.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3        4       5        6        7
1    LogLik 5205.795 6813.579 7304.941 7510.357 7566.95 7575.439 7576.858
         8        9      10       11       12       13
1 7577.142 7577.205 7577.22 7577.223 7577.224 7577.224
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr2----
> # Run model
> HD_STME.z_rr2.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,2):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'HD') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
Warning messages:
1: In asreml(Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep, Ginv.sparse) +  :
  Log-likelihood not converged
2: In asreml(Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep, Ginv.sparse) +  :
  Some components changed by more than 1% on the last iteration
> # Print model info
> print('HD_STME.z_rr2')
[1] "HD_STME.z_rr2"
> print('AIC')
[1] "AIC"
> print(summary(HD_STME.z_rr2.asr)$aic)
[1] -15143.58
attr(,"parameters")
[1] 35
> print(paste('convergence =',HD_STME.z_rr2.asr$converge))
[1] "convergence = FALSE"
> HD_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1       2        3        4        5        6        7
1    LogLik 5049.677 6974.61 7196.064 7432.104 7543.675 7580.437 7589.534
         8        9       10       11       12       13       14       15
1 7592.119 7594.617 7597.143 7599.435 7601.936 7603.164 7603.962 7604.563
        16      17       18       19       20       21
1 7605.029 7605.41 7605.921 7606.436 7606.791 7606.791
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> HD_STME.z_rr2.asr <- update(HD_STME.z_rr2.asr)
> 
> # Print model info
> print('HD_STME.z_rr2-update1')
[1] "HD_STME.z_rr2-update1"
> print('AIC')
[1] "AIC"
> print(summary(HD_STME.z_rr2.asr)$aic)
[1] -15144.27
attr(,"parameters")
[1] 35
> print(paste('convergence =',HD_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> HD_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3      4        5        6        7
1    LogLik 7606.985 7607.002 7607.061 7607.1 7607.121 7607.131 7607.135
         8        9       10
1 7607.137 7607.137 7607.137
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr3----
> # Run model
> HD_STME.z_rr3.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,3):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'HD') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '20gb'
+ )
> # Print model info
> print('HD_STME.z_rr3')
[1] "HD_STME.z_rr3"
> print('AIC')
[1] "AIC"
> print(summary(HD_STME.z_rr3.asr)$aic)
[1] -15139.09
attr(,"parameters")
[1] 39
> print(paste('convergence =',HD_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> HD_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3        4        5        6       7
1    LogLik 6879.698 7268.129 7484.528 7556.409 7592.017 7605.794 7607.97
         8        9       10       11       12       13       14
1 7608.408 7608.509 7608.535 7608.543 7608.545 7608.546 7608.546
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> HD_STME.z_rr3.asr <- update(HD_STME.z_rr3.asr)
> 
> # Print model info
> print('HD_STME.z_rr3-update1')
[1] "HD_STME.z_rr3-update1"
> print('AIC')
[1] "AIC"
> print(summary(HD_STME.z_rr3.asr)$aic)
[1] -15139.09
attr(,"parameters")
[1] 39
> print(paste('convergence =',HD_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> HD_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1        2        3
1    LogLik 7608.546 7608.546 7608.546
> 
> save.image('Data/STME.z_rr.RData')
> 
> ## HT ----
> ### rr1----
> # Run model
> HT_STME.z_rr1.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,1):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'HT') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
> # Print model info
> print('HT_STME.z_rr1')
[1] "HT_STME.z_rr1"
> print('AIC')
[1] "AIC"
> print(summary(HT_STME.z_rr1.asr)$aic)
[1] 381.174
attr(,"parameters")
[1] 35
> print(paste('convergence =',HT_STME.z_rr1.asr$converge))
[1] "convergence = TRUE"
> HT_STME.z_rr1.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration         1         2         3         4         5         6
1    LogLik -1094.964 -593.6931 -309.7947 -202.0509 -165.3666 -158.0097
          7         8        9     10        11        12       13       14
1 -156.2325 -155.7626 -155.635 -155.6 -155.5904 -155.5877 -155.587 -155.587
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr2----
> # Run model
> HT_STME.z_rr2.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,2):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'HT') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
Warning message:
In asreml(Pheno_z ~ Env, random = ~rr(Env, 2):vm(Gkeep, Ginv.sparse) +  :
  Some components changed by more than 1% on the last iteration
> # Print model info
> print('HT_STME.z_rr2')
[1] "HT_STME.z_rr2"
> print('AIC')
[1] "AIC"
> print(summary(HT_STME.z_rr2.asr)$aic)
[1] 366.5047
attr(,"parameters")
[1] 41
> print(paste('convergence =',HT_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> HT_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration         1        2         3         4         5         6
1    LogLik -1150.626 -584.473 -296.5954 -190.8376 -154.6559 -146.5846
          7         8         9        10        11       12        13
1 -144.3683 -143.4299 -142.9214 -142.5867 -142.3914 -142.302 -142.2686
         14        15        16        17
1 -142.2573 -142.2535 -142.2523 -142.2523
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> HT_STME.z_rr2.asr <- update(HT_STME.z_rr2.asr)
> 
> # Print model info
> print('HT_STME.z_rr2-update1')
[1] "HT_STME.z_rr2-update1"
> print('AIC')
[1] "AIC"
> print(summary(HT_STME.z_rr2.asr)$aic)
[1] 366.5039
attr(,"parameters")
[1] 41
> print(paste('convergence =',HT_STME.z_rr2.asr$converge))
[1] "convergence = TRUE"
> HT_STME.z_rr2.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration        1         2         3
1    LogLik -142.252 -142.2519 -142.2519
> 
> save.image('Data/STME.z_rr.RData')
> 
> ### rr3----
> # Run model
> HT_STME.z_rr3.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,3):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'HT') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '20gb'
+ )
Warning messages:
1: In asreml(Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep, Ginv.sparse) +  :
  Log-likelihood not converged
2: In asreml(Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep, Ginv.sparse) +  :
  Some components changed by more than 1% on the last iteration
> # Print model info
> print('HT_STME.z_rr3')
[1] "HT_STME.z_rr3"
> print('AIC')
[1] "AIC"
> print(summary(HT_STME.z_rr3.asr)$aic)
[1] 371.813
attr(,"parameters")
[1] 46
> print(paste('convergence =',HT_STME.z_rr3.asr$converge))
[1] "convergence = FALSE"
> HT_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration         1         2        3         4         5         6
1    LogLik -1163.953 -610.0606 -290.659 -185.2003 -149.9424 -142.7365
          7         8        9        10        11        12        13
1 -140.9589 -140.3941 -140.175 -140.0751 -140.0182 -139.9892 -139.9755
         14        15        16        17        18        19        20
1 -139.9674 -139.9603 -139.9526 -139.9436 -139.9329 -139.9204 -139.9065
         21
1 -139.9065
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> HT_STME.z_rr3.asr <- update(HT_STME.z_rr3.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('HT_STME.z_rr3-update1')
[1] "HT_STME.z_rr3-update1"
> print('AIC')
[1] "AIC"
> print(summary(HT_STME.z_rr3.asr)$aic)
[1] 371.5882
attr(,"parameters")
[1] 46
> print(paste('convergence =',HT_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> HT_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration         1         2         3         4         5         6
1    LogLik -139.8915 -139.8877 -139.8751 -139.8629 -139.8511 -139.8393
          7         8         9        10        11        12        13
1 -139.8286 -139.8195 -139.8122 -139.8066 -139.8023 -139.7991 -139.7968
         14        15        16
1 -139.7952 -139.7941 -139.7941
> 
> save.image('Data/STME.z_rr.RData')
> 
> # Update model
> HT_STME.z_rr3.asr <- update(HT_STME.z_rr3.asr)
Warning message:
In asreml(fixed = Pheno_z ~ Env, random = ~rr(Env, 3):vm(Gkeep,  :
  Some components changed by more than 1% on the last iteration
> 
> # Print model info
> print('HT_STME.z_rr3-update2')
[1] "HT_STME.z_rr3-update2"
> print('AIC')
[1] "AIC"
> print(summary(HT_STME.z_rr3.asr)$aic)
[1] 371.5863
attr(,"parameters")
[1] 46
> print(paste('convergence =',HT_STME.z_rr3.asr$converge))
[1] "convergence = TRUE"
> HT_STME.z_rr3.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration         1         2         3
1    LogLik -139.7933 -139.7932 -139.7932
> 
> save.image('Data/STME.z_rr.RData')
> 
> ## MAT ----
> ### rr1----
> # Run model
> MAT_STME.z_rr1.asr <- asreml(
+   Pheno_z ~ Env,
+   random = ~ rr(Env,1):vm(Gkeep, Ginv.sparse) + diag(Env):vm(Gkeep, Ginv.sparse),
+   residual = ~ dsum(~ ar1(Col):ar1(Row) | Env),
+   sparse = ~ Env:Gdrop,
+   data = ILYT_Pheno |> filter(Trait == 'MAT') |> droplevels(),
+   na.action = na.method(x = "include"),
+   maxit = 20,
+   workspace = '16gb'
+ )
> # Print model info
> print('MAT_STME.z_rr1')
[1] "MAT_STME.z_rr1"
> print('AIC')
[1] "AIC"
> print(summary(MAT_STME.z_rr1.asr)$aic)
[1] 554.8766
attr(,"parameters")
[1] 10
> print(paste('convergence =',MAT_STME.z_rr1.asr$converge))
[1] "convergence = TRUE"
> MAT_STME.z_rr1.asr$trace |> as.data.frame() |> rownames_to_column('Iteration') |>
+   filter(Iteration=='LogLik') |> print()
  Iteration         1         2         3         4         5         6
1    LogLik -387.0504 -347.8088 -305.2012 -280.2378 -270.3715 -268.2949
          7         8        9        10        11        12        13
1 -267.7238 -267.5393 -267.475 -267.4517 -267.4432 -267.4399 -267.4387
         14        15
1 -267.4383 -267.4383
> 
> save.image('Data/STME.z_rr.RData')
> 
> # # End ----
> 
> proc.time()
     user    system   elapsed 
156732.85   6803.05  51836.81 
